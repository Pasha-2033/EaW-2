# this one is called for nightly tests
ai_test_startup_effect = {
	# if = {
	# 	limit = { is_major = yes } 
	# 	#enable crypto agency in ~2.5 years
	# 	country_event = { id = generic_debug.42 days = 900 }
	# }
	# if = {
	# 	limit = { 
	# 		OR = {
	# 			tag = ENG
	# 		}
	# 	} 
	# 	#give usa access to france & england in ~4 year
	# 	country_event = { id = generic_debug.43 days = 1500 }
	# }
}

# effects that starts with name d_ will be available as console command
# use "effect_name_DESC" to define a description

d_collaboration = {
	if = {
		limit = { tag = FROM }
		log = "Error:"
		log = "  right click a country to select it for adding collaboration"
		log = "  you can specify collaboration amount to add or just use 'collaboration' to add 10%"
		log = " "
	}
	else = {
		FROM = {
			add_collaboration = { 
				target = PREV 
				value = args^0?0.1				
			}
			
			log = "Added [?args^0?0.1|H%] collaboration for [PREV.GetName]"
		}
	}
}

d_add_fake_armies = {
	if = {
		# create template if not exist
		limit = {
			not = {
				has_country_flag = fake_intel_template_created
			}
		}
		division_template = {
			name = "Fake Intel Division"
			
			is_fake_intel_division = yes
			is_locked = yes
			regiments = {
				fake_intel_unit = { x = 0 y = 0 }
			}
		}
		set_country_flag = fake_intel_template_created
	}
	
	# give it an id and store id & current date so it can be deleted later
	if = {
		limit = { NOT = { has_variable = fake_intel_id } }
		set_variable = { fake_intel_id = 1000 }
	}
	set_temp_variable = { id_to_set = fake_intel_id }
	add_to_variable = { fake_intel_id = 1 }
	add_to_array = {
		fake_intel_ids_to_delete = id_to_set
	}
	set_variable = { num_days_for_fake_intel_id@var:id_to_set = global.num_days }
	
	# minimum of 0.25 of current armies or 24
	set_temp_variable = { num_to_create = num_armies }
	multiply_temp_variable = { num_to_create = 0.25 }
	round_temp_variable = num_to_create
	add_to_temp_variable = { num_to_create = 1 }
	clamp_temp_variable = {
		var = num_to_create
		min = 24
	}
	
	# create actual units
	capital_scope = {
		create_unit = {
			division = "Division_template = \"Fake Intel Division\" start_experience_factor = 0.5" 
			owner = PREV
			count = num_to_create
			id = id_to_set
		}
	}
	
	# will delete them after 90 days
	country_event = { id = lar_fake_intel_units.1 days = 90 }
	
	log = "Done"
}
d_get_state = {
	if = {
		limit = {
			FROM = {
				tag = ROOT.owner
			}
		}
		log = "[FROM.GetTag] already have state with [PREV.GetID] id"
	}
	else = {
		FROM = {
			transfer_state = PREV
		}
		log = "State with [PREV.GetID] id is assigned to [FROM.GetTag], [ROOT.owner.GetTag]"
	}
}
#government idea modding
d_increase_science_base_flag = {
	increase_science_base_flag = yes
	log = "Increased science base flag for [ROOT.GetTag]"
	if = {
		limit = {
			has_country_flag = disallow_science_base_flag_fix
		}
		log = "No fixes for science base flag applied for [ROOT.GetTag]"
	}
}
d_decrease_science_base_flag = {
	decrease_science_base_flag = yes
	log = "Decreased science base flag for [ROOT.GetTag]"
	if = {
		limit = {
			has_country_flag = disallow_science_base_flag_fix
		}
		log = "No fixes for science base flag applied for [ROOT.GetTag]"
	}
}
d_increase_science_base_idea = {
	increase_science_base_idea = yes
	log = "Increased science base idea for [ROOT.GetTag]"
	if = {
		limit = {
			has_country_flag = disallow_science_base_flag_fix
		}
		log = "No fixes for science base flag applied for [ROOT.GetTag]"
	}
}
d_decrease_science_base_idea = {
	decrease_science_base_idea = yes
	log = "Decreased science base idea for [ROOT.GetTag]"
	if = {
		limit = {
			has_country_flag = disallow_science_base_flag_fix
		}
		log = "No fixes for science base flag applied for [ROOT.GetTag]"
	}
}
d_increase_poverty_level_flag = {
	increase_poverty_level_flag = yes
	log = "Increased poverty level flag for [ROOT.GetTag]"
	if = {
		limit = {
			has_country_flag = disallow_poverty_flag_fix
		}
		log = "No fixes for poverty level flag applied for [ROOT.GetTag]"
	}
}
d_decrease_poverty_level_flag = {
	decrease_poverty_level_flag = yes
	log = "Decreased poverty level flag for [ROOT.GetTag]"
	if = {
		limit = {
			has_country_flag = disallow_poverty_flag_fix
		}
		log = "No fixes for poverty level flag applied for [ROOT.GetTag]"
	}
}
d_increase_poverty_level_idea = {
	increase_poverty_level_flag = yes
	log = "Increased poverty level idea for [ROOT.GetTag]"
	if = {
		limit = {
			has_country_flag = disallow_poverty_flag_fix
		}
		log = "No fixes for poverty level flag applied for [ROOT.GetTag]"
	}
}
d_decrease_poverty_level_idea = {
	decrease_poverty_level_flag = yes
	log = "Decreased poverty level idea for [ROOT.GetTag]"
	if = {
		limit = {
			has_country_flag = disallow_poverty_flag_fix
		}
		log = "No fixes for poverty level flag applied for [ROOT.GetTag]"
	}
}
#idea control degub
d_fix_science_base_flag_by_flag = {
	fix_science_base_flag_by_flag = yes
	log = "Fixed science base flag by flag for [ROOT.GetTag]"
}
d_fix_science_base_flag_by_idea = {
	fix_science_base_flag_by_idea = yes
	log = "Fixed science base flag by idea for [ROOT.GetTag]"
}
d_fix_poverty_level_flag_by_flag = {
	fix_poverty_level_flag_by_flag = yes
	log = "Fixed poverty level flag by flag for [ROOT.GetTag]"
}
d_fix_poverty_level_flag_by_idea = {
	fix_poverty_level_flag_by_idea = yes
	log = "Fixed poverty level flag by idea for [ROOT.GetTag]"
}
#code for math mtth vars, delete from here
d_erf = {
	set_temp_variable = {
		2_d_sqrt_pi = 1.128 #~2/sqrt(pi)
	}
	set_temp_variable = {
		x = args^0
	}
	set_temp_variable = {
		n2x = x
	}
	multiply_temp_variable = {
		n2x = n2x
	}
	multiply_temp_variable = {
		n2x = -1
	}
	set_temp_variable = {
		sum = x
	}
	set_temp_variable = {
		counter_0 = 1
	}
	while_loop_effect = {
		limit = {
			check_variable = {
				counter_0 < 10
			}
		}
		multiply_temp_variable = {
			x = n2x
		}
		set_temp_variable = {
			fact = 1
		}
		set_temp_variable = {
			fact_counter = counter_0
		}
		while_loop_effect = {
			limit = {
				check_variable = {
					fact_counter > 1
				}
			}
			multiply_temp_variable = {
				fact = fact_counter
			}
			subtract_from_temp_variable = {
				fact_counter = 1
			}
		}
		set_temp_variable = {
			2n_1 = counter_0
		}
		multiply_temp_variable = {
			2n_1 = 2
		}
		add_to_temp_variable = {
			2n_1 = 1
		}
		set_temp_variable = {
			temp_x = x
		}
		divide_temp_variable = {
			temp_x = fact
		}
		divide_temp_variable = {
			temp_x = 2n_1
		}
		add_to_temp_variable = {
			sum = temp_x
		}
		log = "[?temp_x]"
		add_to_temp_variable = {
			counter_0 = 1
		}
	}
	multiply_temp_variable = {
		sum = 2_d_sqrt_pi
	}
	log = "erf of [?args^0]: [?sum]"
}
d_erfi = {
	set_temp_variable = {
		2_d_sqrt_pi = 1.128 #~2/sqrt(pi)
	}
	set_temp_variable = {
		x = args^0
	}
	set_temp_variable = {
		2x = x
	}
	multiply_temp_variable = {
		2x = 2x
	}
	set_temp_variable = {
		sum = x
	}
	set_temp_variable = {
		counter_0 = 1
	}
	while_loop_effect = {
		limit = {
			check_variable = {
				counter_0 < 10
			}
		}
		multiply_temp_variable = {
			x = 2x
		}
		set_temp_variable = {
			fact = 1
		}
		set_temp_variable = {
			fact_counter = counter_0
		}
		while_loop_effect = {
			limit = {
				check_variable = {
					fact_counter > 1
				}
			}
			multiply_temp_variable = {
				fact = fact_counter
			}
			subtract_from_temp_variable = {
				fact_counter = 1
			}
		}
		set_temp_variable = {
			2n_1 = counter_0
		}
		multiply_temp_variable = {
			2n_1 = 2
		}
		add_to_temp_variable = {
			2n_1 = 1
		}
		set_temp_variable = {
			temp_x = x
		}
		divide_temp_variable = {
			temp_x = fact
		}
		divide_temp_variable = {
			temp_x = 2n_1
		}
		add_to_temp_variable = {
			sum = temp_x
		}
		log = "[?temp_x]"
		add_to_temp_variable = {
			counter_0 = 1
		}
	}
	multiply_temp_variable = {
		sum = 2_d_sqrt_pi
	}
	log = "erf of [?args^0]: [?sum]"
}
#get mod data
d_get_tags = {
	log = "All existing tags:"
	for_each_scope_loop = {
		array = global.countries
		log = "Tag: [?THIS.GetTag], exists: [country_exists_text], dynamic tag: [country_tag_dynamic_text], name: [?THIS.GetName]"
	}
}